// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$fb-name: 'fb';
$fb-x: 567px;
$fb-y: 1080px;
$fb-offset-x: -567px;
$fb-offset-y: -1080px;
$fb-width: 69px;
$fb-height: 69px;
$fb-total-width: 1920px;
$fb-total-height: 1874px;
$fb-image: 'sprite.png';
$fb: (567px, 1080px, -567px, -1080px, 69px, 69px, 1920px, 1874px, 'sprite.png', 'fb', );
$grievous-2-coloring-page-name: 'grievous-2-coloring-page';
$grievous-2-coloring-page-x: 0px;
$grievous-2-coloring-page-y: 1080px;
$grievous-2-coloring-page-offset-x: 0px;
$grievous-2-coloring-page-offset-y: -1080px;
$grievous-2-coloring-page-width: 567px;
$grievous-2-coloring-page-height: 794px;
$grievous-2-coloring-page-total-width: 1920px;
$grievous-2-coloring-page-total-height: 1874px;
$grievous-2-coloring-page-image: 'sprite.png';
$grievous-2-coloring-page: (0px, 1080px, 0px, -1080px, 567px, 794px, 1920px, 1874px, 'sprite.png', 'grievous-2-coloring-page', );
$in-name: 'in';
$in-x: 636px;
$in-y: 1080px;
$in-offset-x: -636px;
$in-offset-y: -1080px;
$in-width: 69px;
$in-height: 69px;
$in-total-width: 1920px;
$in-total-height: 1874px;
$in-image: 'sprite.png';
$in: (636px, 1080px, -636px, -1080px, 69px, 69px, 1920px, 1874px, 'sprite.png', 'in', );
$source-name: 'source';
$source-x: 0px;
$source-y: 0px;
$source-offset-x: 0px;
$source-offset-y: 0px;
$source-width: 1920px;
$source-height: 1080px;
$source-total-width: 1920px;
$source-total-height: 1874px;
$source-image: 'sprite.png';
$source: (0px, 0px, 0px, 0px, 1920px, 1080px, 1920px, 1874px, 'sprite.png', 'source', );
$vk-name: 'vk';
$vk-x: 705px;
$vk-y: 1080px;
$vk-offset-x: -705px;
$vk-offset-y: -1080px;
$vk-width: 69px;
$vk-height: 69px;
$vk-total-width: 1920px;
$vk-total-height: 1874px;
$vk-image: 'sprite.png';
$vk: (705px, 1080px, -705px, -1080px, 69px, 69px, 1920px, 1874px, 'sprite.png', 'vk', );
$spritesheet-width: 1920px;
$spritesheet-height: 1874px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($fb, $grievous-2-coloring-page, $in, $source, $vk, );
$spritesheet: (1920px, 1874px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a components CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS views
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
